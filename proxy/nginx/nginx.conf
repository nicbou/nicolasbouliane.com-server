user  nginx;
worker_processes  auto;
pid /var/run/nginx.pid;

error_log /var/log/nginx/error.log notice;

events {
    worker_connections 4096;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    charset utf-8;
    gzip_static on;
    client_max_body_size 0;
    sendfile on;
    sendfile_max_chunk 1m;

    keepalive_timeout 65;

    map_hash_bucket_size 128;
    map $status $loggable { 
        ~^[123] 0;
        499 0;
        426 0;
        default 1;
    }
    log_format  main  '$remote_addr [$time_iso8601] "$request" $status "$http_referer" "$http_user_agent"';

    include /etc/nginx/configs/redirects.conf;

    proxy_cache_path /var/run/nginx-cache/jscache levels=1:2 keys_zone=jscache:100m inactive=30d  use_temp_path=off max_size=100m;
    
    # ==========================================================================
    # HTTP redirect to HTTPS
    # ==========================================================================
    server {
        listen 80;
        listen [::]:80;
        server_name nicolasbouliane.com localhost;
        access_log off;
        return 301 https://$host$request_uri;
    }

    # ==========================================================================
    # Main logic
    # ==========================================================================
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name nicolasbouliane.com localhost;

        # The internal docker DNS. Required to make proxy_pass URL variables work.
        resolver 127.0.0.11 valid=30s;

        root "/var/www/html";

        # Remove trailing slashes
        rewrite ^/(.*)/$ /$1 permanent;


        # Logging
        error_log off;
        log_not_found on;
        access_log /var/log/nginx/access.log combined if=$loggable;

        location ~ /apple-touch-icon(|-\d+x\d+)(|-precomposed).png {
            return 204;
            access_log off;
        }
        location = /favicon.ico {
            return 301 /staticimages/favicon.png;
            access_log off;
        }


        # Error pages
        error_page 404 /404.html;


        # Remove double slashes
        merge_slashes off;
        rewrite (.*)//+(.*) $1/$2 permanent;

        include /etc/nginx/configs/compression.conf;
        include /etc/nginx/configs/expires.conf;
        include /etc/nginx/configs/security.conf;
        include /etc/nginx/configs/ssl.conf;

        # Don't allow .html extension. It's stripped from the URL
        location ~ \.html$ {
            return 404;
        }
        location ~ /index$ {
            return 404;
        }

        location /search {
            access_log off;
            return 301 $scheme://home.nicolasbouliane.com$request_uri;
        }

        # The main static site
        location / {
            if ($redirects301) {
                rewrite ^ $redirects301 permanent;
            }

            if ($redirects302) {
                rewrite ^ $redirects302 redirect;
            }

            try_files $uri $uri.html $uri/index.html =404;

            expires 1d;
        }

        location = /404.html {
            internal;
        }

    }

    # Ignore requests with wrong domain name
    server {
        listen 80 default_server;
        server_name "";
        return 444;
    }
    server {
        listen 443 default_server;
        server_name "";
        ssl_certificate /etc/ssl-certs/full-chain.pem;
        ssl_certificate_key /etc/ssl-certs/private-key.pem;
        return 444;
    }

}
